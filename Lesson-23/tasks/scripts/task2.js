// 1. –î–∞–Ω–æ –∫–ª–∞—Å PhoneNumber. –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ñ—É–Ω–∫—Ü—ñ—é –ø–µ—Ä–µ—Ç–≤–æ—Ä–µ–Ω–Ω—è –¥–æ string, –ø—Ä–∏ —è–∫–æ–º—É –Ω–∞ –æ—Å–Ω–æ–≤—ñ –Ω–æ–º–µ—Ä–∞ –≤–∏–≤–æ–¥–∏—Ç—å—Å—è –æ–ø–µ—Ä–∞—Ç–æ—Ä
// (050‚Ä¶.  ü°™ MTC, 096‚Ä¶ ü°™ Kyivstar, ‚Ä¶.)

class PhoneNumber {
  constructor(number) {
    this.number = number
  }

  [Symbol.toPrimitive](hint) {
    let result
    if (hint === 'string') {
      if (/^(050|066)/.test(this.number)) result = 'MTC'
      else if (/^067|096|098/.test(this.number)) result = 'Kyivstar'
      else if (/^063|093/.test(this.number)) result = 'Lifecell'
      else result = 'Unknown operator'
    } else result = this.number
    return result
  }
}

const num1 = new PhoneNumber('063')
console.log("Task 1:", `${num1}`)

// 2. –î–∞–Ω–æ Shop  -- –∫–ª–∞—Å, —â–æ –º—ñ—Å—Ç–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä—ñ–≤ (–º–∞—Å–∏–≤ –æ–±‚Äô—î–∫—Ç—ñ–≤ –∫–ª–∞—Å—É Product (–Ω–∞–∑–≤–∞, —Ü—ñ–Ω–∞, –∫—ñ–ª—å–∫—ñ—Å—Ç—å –æ–¥–∏–Ω–∏—Ü—å).
// –î–æ–¥–∞—Ç–∏ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å —ñ—Ç–µ—Ä–∞—Ç–æ—Ä–∞ –¥–æ –∫–ª–∞—Å—É Shop, —â–æ–± –ø—Ä–∏ —ñ—Ç–µ—Ä—É–≤–∞–Ω–Ω—ñ –¥–ª—è –∫–æ–∂–Ω–æ–≥–æ –µ–ª–µ–º–µ–Ω—Ç–∞ –≤–∏–≤–æ–¥–∏–≤—Å—è —Ä—è–¥–æ–∫ ¬´—Ç–æ–≤–∞—Ä - –∑–∞–≥–∞–ª—å–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å¬ª

class Shop {
  constructor(productList) {
    this.productList = productList
  }

  [Symbol.iterator]() {
    this.index = 0
    return this
  }

  next() {
    if (this.index < this.productList.length)
      return { done: false, value: `${this.productList[this.index++]}` }
    else return { done: true }
  }
}

class Product {
  constructor(name, price, amount) {
    this.name = name
    this.price = price
    this.amount = amount
  }

  totalPrice() {
    return this.price * this.amount
  }

  [Symbol.toPrimitive](hint) {
    let result
    switch (hint) {
      case 'number':
        result = this.totalPrice()
        break
      case `string`:
        result = `${this.name} - ${this.totalPrice()} –≥—Ä–Ω.`
        break
    }
    return result
  }
}

const productList = [
  new Product('Coffe', 120, 10),
  new Product('Sweet', 70, 15),
  new Product('Milk', 50, 7),
  new Product('Tea', 76, 17)
]
const shop = new Shop(productList)

console.log("Task 2:")
for (const product of shop) {
  console.log(product)
}

// 3.  –°—Ç–≤–æ—Ä–∏—Ç–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä, —è–∫–∏–π –±–∏ –≤–∏–ø–∞–¥–∫–æ–≤–∏–º —á–∏–Ω–æ–º –ø–æ—Å—Ç—É–ø–æ–≤–æ –≥–µ–Ω–µ—Ä—É–≤–∞–≤ –≤–∫–∞–∑–∞–Ω—É –∫—ñ–ª—å–∫—ñ—Å—Ç—å –ø–∞—Ä–Ω–∏—Ö —á–∏—Å–µ–ª.

function* generator(n) {
  let numberCount = 0
  while (numberCount < n) {
    let randomNumber = 2 + Math.floor(Math.random() * 99)
    if (randomNumber % 2 === 0) numberCount++
    else continue
    yield randomNumber
  }
}

const n = 10
console.log("Task 3:")
for (const number of generator(n)) {
  console.log(number)
}